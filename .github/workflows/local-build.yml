name: Local Build (for act testing)

on:
  workflow_dispatch:

env:
  FLUTTER_VERSION: "3.32.8"

jobs:
  build-android-local:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Setup Flutter Version Manager (FVM)
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Install FVM
        run: |
          dart pub global activate fvm
          fvm install ${{ env.FLUTTER_VERSION }}
          fvm use ${{ env.FLUTTER_VERSION }} --force

      - name: Flutter version
        run: fvm flutter --version

      - name: Get Flutter dependencies
        run: fvm flutter pub get

      - name: Create .env file
        run: |
          echo "API_BASE_URL=${{ secrets.API_BASE_URL }}" > .env
          echo "PUBLIC_STORAGE=${{ secrets.PUBLIC_STORAGE }}" >> .env

      - name: Generate code with build_runner
        run: fvm dart run build_runner build --delete-conflicting-outputs

      - name: Generate localizations
        run: fvm flutter gen-l10n

      - name: Decode and create google-services.json
        run: |
          echo '${{ secrets.GOOGLE_SERVICES_JSON_B64 }}' | base64 -d > android/app/google-services.json
        env:
          GOOGLE_SERVICES_JSON_B64: ${{ secrets.GOOGLE_SERVICES_JSON_B64 }}

      - name: Decode and create firebase_options.dart
        run: |
          echo '${{ secrets.FIREBASE_OPTIONS_DART_B64 }}' | base64 -d > lib/firebase_options.dart
        env:
          FIREBASE_OPTIONS_DART_B64: ${{ secrets.FIREBASE_OPTIONS_DART_B64 }}

      - name: Setup Android signing
        uses: android-actions/setup-android@v3

      - name: Build APK with obfuscation
        run: |
          fvm flutter build apk \
            --release \
            --obfuscate \
            --split-debug-info=build/debug-info \
            --dart-define=FLUTTER_BUILD_MODE=release \
            --target=lib/main.dart

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk-local
          path: build/app/outputs/flutter-apk/app-release.apk
          retention-days: 30

      - name: Deploy to Firebase App Distribution (Local)
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: pre-testers
          releaseNotesFile: release-notes.txt || release-notes.md
          file: build/app/outputs/flutter-apk/app-release.apk
